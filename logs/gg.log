2020-04-09 14:34:05,132 -- [test_invest.py-->line:61] - INFO: 用例借款人正常登录通过
2020-04-09 14:34:05,410 -- [test_invest.py-->line:61] - INFO: 用例借款人加标通过
2020-04-09 14:34:05,826 -- [test_invest.py-->line:61] - INFO: 用例管理员正常登录通过
2020-04-09 14:34:06,085 -- [test_invest.py-->line:61] - INFO: 用例管理员审核通过
2020-04-09 14:34:06,526 -- [test_invest.py-->line:61] - INFO: 用例投资人正常登录通过
2020-04-09 14:34:06,821 -- [test_invest.py-->line:61] - INFO: 用例充值成功-整数通过
2020-04-09 14:34:07,084 -- [test_invest.py-->line:61] - INFO: 用例投资人正常投资通过
2020-04-09 14:34:07,342 -- [test_invest.py-->line:61] - INFO: 用例投资人id为空通过
2020-04-09 14:34:07,585 -- [test_invest.py-->line:61] - INFO: 用例标id为空通过
2020-04-09 14:34:07,836 -- [test_invest.py-->line:61] - INFO: 用例投资金额为空通过
2020-04-10 16:04:47,538 -- [test_invest.py-->line:61] - INFO: 用例借款人正常登录通过
2020-04-10 16:04:48,135 -- [test_invest.py-->line:61] - INFO: 用例借款人加标通过
2020-04-10 16:04:48,573 -- [test_invest.py-->line:61] - INFO: 用例管理员正常登录通过
2020-04-10 16:04:48,846 -- [test_invest.py-->line:61] - INFO: 用例管理员审核通过
2020-04-10 16:04:49,306 -- [test_invest.py-->line:61] - INFO: 用例投资人正常登录通过
2020-04-10 16:04:49,619 -- [test_invest.py-->line:61] - INFO: 用例充值成功-整数通过
2020-04-10 16:04:49,917 -- [test_invest.py-->line:61] - INFO: 用例投资人正常投资通过
2020-04-10 16:04:50,153 -- [test_invest.py-->line:61] - INFO: 用例投资人id为空通过
2020-04-10 16:04:50,407 -- [test_invest.py-->line:61] - INFO: 用例标id为空通过
2020-04-10 16:04:50,663 -- [test_invest.py-->line:61] - INFO: 用例投资金额为空通过
2020-04-10 16:10:18,413 -- [test_invest.py-->line:61] - INFO: 用例借款人正常登录通过
2020-04-10 16:10:18,681 -- [test_invest.py-->line:61] - INFO: 用例借款人加标通过
2020-04-10 16:10:19,121 -- [test_invest.py-->line:61] - INFO: 用例管理员正常登录通过
2020-04-10 16:10:19,387 -- [test_invest.py-->line:61] - INFO: 用例管理员审核通过
2020-04-10 16:10:19,822 -- [test_invest.py-->line:61] - INFO: 用例投资人正常登录通过
2020-04-10 16:10:20,102 -- [test_invest.py-->line:61] - INFO: 用例充值成功-整数通过
2020-04-10 16:10:20,361 -- [test_invest.py-->line:61] - INFO: 用例投资人正常投资通过
2020-04-10 16:10:20,632 -- [test_invest.py-->line:61] - INFO: 用例投资人id为空通过
2020-04-10 16:10:20,896 -- [test_invest.py-->line:61] - INFO: 用例标id为空通过
2020-04-10 16:10:21,159 -- [test_invest.py-->line:61] - INFO: 用例投资金额为空通过
2020-04-10 16:11:25,098 -- [test_invest.py-->line:61] - INFO: 用例借款人正常登录通过
2020-04-10 16:11:25,368 -- [test_invest.py-->line:61] - INFO: 用例借款人加标通过
2020-04-10 16:11:25,795 -- [test_invest.py-->line:61] - INFO: 用例管理员正常登录通过
2020-04-10 16:11:26,062 -- [test_invest.py-->line:61] - INFO: 用例管理员审核通过
2020-04-10 16:11:26,512 -- [test_invest.py-->line:61] - INFO: 用例投资人正常登录通过
2020-04-10 16:11:26,774 -- [test_invest.py-->line:61] - INFO: 用例充值成功-整数通过
2020-04-10 16:11:27,029 -- [test_invest.py-->line:61] - INFO: 用例投资人正常投资通过
2020-04-10 16:11:27,264 -- [test_invest.py-->line:61] - INFO: 用例投资人id为空通过
2020-04-10 16:11:27,524 -- [test_invest.py-->line:61] - INFO: 用例标id为空通过
2020-04-10 16:11:27,762 -- [test_invest.py-->line:61] - INFO: 用例投资金额为空通过
2020-04-11 11:44:39,731 -- [test_add.py-->line:84] - INFO: 用例--加标成功--通过
2020-04-11 11:44:40,225 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款人id为空--通过
2020-04-11 11:44:40,507 -- [test_add.py-->line:84] - INFO: 用例--加标失败—标题为空--通过
2020-04-11 11:44:40,846 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为空--通过
2020-04-11 11:44:41,089 -- [test_add.py-->line:84] - INFO: 用例--加标失败—年利率为空--通过
2020-04-11 11:44:41,357 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款期限为空--通过
2020-04-11 11:44:41,600 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款期限类型为空--通过
2020-04-11 11:44:41,862 -- [test_add.py-->line:84] - INFO: 用例--加标失败—竞标天数为空--通过
2020-04-11 11:44:42,149 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款人id不是当前登录用户--通过
2020-04-11 11:44:42,388 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为负数--通过
2020-04-11 11:44:42,723 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为小数--通过
2020-04-11 12:35:42,974 -- [test_add.py-->line:84] - INFO: 用例--加标成功--通过
2020-04-11 12:35:43,785 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款人id为空--通过
2020-04-11 12:35:44,070 -- [test_add.py-->line:84] - INFO: 用例--加标失败—标题为空--通过
2020-04-11 12:35:44,332 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为空--通过
2020-04-11 12:35:44,619 -- [test_add.py-->line:84] - INFO: 用例--加标失败—年利率为空--通过
2020-04-11 12:35:45,083 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款期限为空--通过
2020-04-11 12:35:45,352 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款期限类型为空--通过
2020-04-11 12:35:45,622 -- [test_add.py-->line:84] - INFO: 用例--加标失败—竞标天数为空--通过
2020-04-11 12:35:45,940 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款人id不是当前登录用户--通过
2020-04-11 12:35:46,188 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为负数--通过
2020-04-11 12:35:46,443 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为小数--通过
2020-04-11 12:35:47,417 -- [test_audit.py-->line:111] - INFO: 用例--审核通过--通过
2020-04-11 12:35:47,936 -- [test_audit.py-->line:111] - INFO: 用例--审核不通过--通过
2020-04-11 12:35:48,306 -- [test_audit.py-->line:111] - INFO: 用例--项目不待审核状态--通过
2020-04-11 12:35:48,658 -- [test_audit.py-->line:111] - INFO: 用例--参数approved_or_not为空--通过
2020-04-11 12:35:49,017 -- [test_audit.py-->line:111] - INFO: 用例--项目id为空--通过
2020-04-11 12:35:49,373 -- [test_audit.py-->line:111] - INFO: 用例--项目id不存在--通过
2020-04-11 12:35:49,650 -- [test_invest.py-->line:61] - INFO: 用例借款人正常登录通过
2020-04-11 12:35:49,905 -- [test_invest.py-->line:61] - INFO: 用例借款人加标通过
2020-04-11 12:35:50,155 -- [test_invest.py-->line:61] - INFO: 用例管理员正常登录通过
2020-04-11 12:35:50,394 -- [test_invest.py-->line:61] - INFO: 用例管理员审核通过
2020-04-11 12:35:50,828 -- [test_invest.py-->line:61] - INFO: 用例投资人正常登录通过
2020-04-11 12:35:51,086 -- [test_invest.py-->line:61] - INFO: 用例充值成功-整数通过
2020-04-11 12:35:51,349 -- [test_invest.py-->line:61] - INFO: 用例投资人正常投资通过
2020-04-11 12:35:51,616 -- [test_invest.py-->line:61] - INFO: 用例投资人id为空通过
2020-04-11 12:35:51,873 -- [test_invest.py-->line:61] - INFO: 用例标id为空通过
2020-04-11 12:35:52,367 -- [test_invest.py-->line:61] - INFO: 用例投资金额为空通过
2020-04-11 12:35:52,973 -- [test_loans.py-->line:45] - INFO: 用例--正常获取--通过
2020-04-11 12:35:53,273 -- [test_loans.py-->line:45] - INFO: 用例--正常获取--通过
2020-04-11 12:35:53,542 -- [test_loans.py-->line:37] - ERROR: 用例--页索引足够大--未通过
2020-04-11 12:35:53,542 -- [test_loans.py-->line:38] - DEBUG: 预期结果{'code': 2, 'msg': '超出范围'}
2020-04-11 12:35:53,543 -- [test_loans.py-->line:39] - DEBUG: 实际结果{'code': 1005, 'msg': 'Failed to convert value of type \'java.lang.String\' to required type \'java.lang.Integer\'; nested exception is java.lang.NumberFormatException: For input string: "10000000000"', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:35:53,543 -- [test_loans.py-->line:40] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 33, in test_loans
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-11 12:36:46,364 -- [test_loans.py-->line:37] - ERROR: 用例--每页大小为零--未通过
2020-04-11 12:36:46,364 -- [test_loans.py-->line:38] - DEBUG: 预期结果{'code': 2, 'msg': '参数错误'}
2020-04-11 12:36:46,364 -- [test_loans.py-->line:39] - DEBUG: 实际结果{'code': 1005, 'msg': "Error attempting to get column 'full_time' from result set.  Cause: java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp\n; Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp; nested exception is java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp", 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:36:46,364 -- [test_loans.py-->line:40] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 33, in test_loans
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-11 12:36:46,631 -- [test_loans.py-->line:37] - ERROR: 用例--页索引为零--未通过
2020-04-11 12:36:46,632 -- [test_loans.py-->line:38] - DEBUG: 预期结果{'code': 2, 'msg': '参数错误'}
2020-04-11 12:36:46,632 -- [test_loans.py-->line:39] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:36:46,632 -- [test_loans.py-->line:40] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 33, in test_loans
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:37:35,266 -- [test_loans.py-->line:37] - ERROR: 用例--都为零--未通过
2020-04-11 12:37:35,266 -- [test_loans.py-->line:38] - DEBUG: 预期结果{'code': 2, 'msg': '参数错误'}
2020-04-11 12:37:35,267 -- [test_loans.py-->line:39] - DEBUG: 实际结果{'code': 1005, 'msg': "Error attempting to get column 'full_time' from result set.  Cause: java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp\n; Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp; nested exception is java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp", 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:35,267 -- [test_loans.py-->line:40] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 33, in test_loans
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-11 12:37:35,525 -- [test_loans.py-->line:37] - ERROR: 用例--页索引为中文--未通过
2020-04-11 12:37:35,526 -- [test_loans.py-->line:38] - DEBUG: 预期结果{'code': 2, 'msg': '参数错误'}
2020-04-11 12:37:35,526 -- [test_loans.py-->line:39] - DEBUG: 实际结果{'code': 1005, 'msg': 'Failed to convert value of type \'java.lang.String\' to required type \'java.lang.Integer\'; nested exception is java.lang.NumberFormatException: For input string: "合理"', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:35,526 -- [test_loans.py-->line:40] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 33, in test_loans
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-11 12:37:35,758 -- [test_loans.py-->line:37] - ERROR: 用例--页索引为字母--未通过
2020-04-11 12:37:35,758 -- [test_loans.py-->line:38] - DEBUG: 预期结果{'code': 2, 'msg': '参数错误'}
2020-04-11 12:37:35,759 -- [test_loans.py-->line:39] - DEBUG: 实际结果{'code': 1005, 'msg': 'Failed to convert value of type \'java.lang.String\' to required type \'java.lang.Integer\'; nested exception is java.lang.NumberFormatException: For input string: "asd"', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:35,759 -- [test_loans.py-->line:40] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 33, in test_loans
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-11 12:37:36,033 -- [test_loans.py-->line:37] - ERROR: 用例--页索引为符号--未通过
2020-04-11 12:37:36,033 -- [test_loans.py-->line:38] - DEBUG: 预期结果{'code': 2, 'msg': '参数错误'}
2020-04-11 12:37:36,033 -- [test_loans.py-->line:39] - DEBUG: 实际结果{'code': 1005, 'msg': 'Failed to convert value of type \'java.lang.String\' to required type \'java.lang.Integer\'; nested exception is java.lang.NumberFormatException: For input string: "/["', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:36,033 -- [test_loans.py-->line:40] - ERROR: 2 != 1005
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 33, in test_loans
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1005
2020-04-11 12:37:36,479 -- [test_login.py-->line:45] - INFO: 用例登录成功执行通过
2020-04-11 12:37:36,765 -- [test_login.py-->line:38] - ERROR: 用例手机号为空没有通过，错误等级为error
2020-04-11 12:37:36,765 -- [test_login.py-->line:39] - DEBUG: 预期结果{'code': 1, 'msg': '手机号码为空'}
2020-04-11 12:37:36,765 -- [test_login.py-->line:40] - DEBUG: 实际结果{'code': 2, 'msg': '手机号码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 12:37:36,765 -- [test_login.py-->line:41] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_login.py", line 35, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-11 12:37:37,028 -- [test_login.py-->line:38] - ERROR: 用例密码为空没有通过，错误等级为error
2020-04-11 12:37:37,028 -- [test_login.py-->line:39] - DEBUG: 预期结果{'code': 1, 'msg': '密码为空'}
2020-04-11 12:37:37,029 -- [test_login.py-->line:40] - DEBUG: 实际结果{'code': 2, 'msg': '密码为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 12:37:37,029 -- [test_login.py-->line:41] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_login.py", line 35, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-11 12:37:37,457 -- [test_login.py-->line:45] - INFO: 用例手机号未注册执行通过
2020-04-11 12:37:37,902 -- [test_login.py-->line:45] - INFO: 用例密码错误执行通过
2020-04-11 12:37:38,153 -- [test_login.py-->line:45] - INFO: 用例手机号格式错误执行通过
2020-04-11 12:37:38,899 -- [test_recharge.py-->line:86] - INFO: 用例--充值成功-整数--通过
2020-04-11 12:37:39,335 -- [test_recharge.py-->line:86] - INFO: 用例--充值成功-1位小数--通过
2020-04-11 12:37:39,774 -- [test_recharge.py-->line:86] - INFO: 用例--充值成功-2位小数--通过
2020-04-11 12:37:40,224 -- [test_recharge.py-->line:86] - INFO: 用例--充值成功-50万--通过
2020-04-11 12:37:40,508 -- [test_recharge.py-->line:86] - INFO: 用例--会员id为空--通过
2020-04-11 12:37:40,790 -- [test_recharge.py-->line:86] - INFO: 用例--id不是当前登录的用户--通过
2020-04-11 12:37:41,055 -- [test_recharge.py-->line:78] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 12:37:41,055 -- [test_recharge.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 12:37:41,055 -- [test_recharge.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 1502401.32, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:41,056 -- [test_recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:37:41,358 -- [test_recharge.py-->line:86] - INFO: 用例--会员id为小数--通过
2020-04-11 12:37:41,665 -- [test_recharge.py-->line:78] - ERROR: 用例--充值金额为0--未通过
2020-04-11 12:37:41,665 -- [test_recharge.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-11 12:37:41,666 -- [test_recharge.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 1502401.32, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:41,666 -- [test_recharge.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:37:41,916 -- [test_recharge.py-->line:86] - INFO: 用例--充值金额为负数--通过
2020-04-11 12:37:42,196 -- [test_recharge.py-->line:78] - ERROR: 用例--充值金额为空--未通过
2020-04-11 12:37:42,196 -- [test_recharge.py-->line:79] - DEBUG: 预期结果{'code': 1, 'msg': '充值金额为空'}
2020-04-11 12:37:42,197 -- [test_recharge.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '数字格式化异常', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:42,197 -- [test_recharge.py-->line:81] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 70, in test_recharge
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-11 12:37:42,452 -- [test_recharge.py-->line:78] - ERROR: 用例--充值金额-3位小数--未通过
2020-04-11 12:37:42,452 -- [test_recharge.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '金额小数超过两位'}
2020-04-11 12:37:42,453 -- [test_recharge.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:42,453 -- [test_recharge.py-->line:81] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-11 12:37:42,708 -- [test_recharge.py-->line:78] - ERROR: 用例--充值金额-大于50万--未通过
2020-04-11 12:37:42,709 -- [test_recharge.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '金额必须大于0并且小于或者等于500000'}
2020-04-11 12:37:42,709 -- [test_recharge.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:42,709 -- [test_recharge.py-->line:81] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 71, in test_recharge
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-11 12:37:42,941 -- [test_recharge.py-->line:86] - INFO: 用例--充值金额-非数字--通过
2020-04-11 12:37:43,199 -- [test_register.py-->line:52] - ERROR: 用例--注册成功-带注册名--未通过
2020-04-11 12:37:43,200 -- [test_register.py-->line:53] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 12:37:43,200 -- [test_register.py-->line:54] - DEBUG: 实际结果{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:43,200 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-11 12:37:43,433 -- [test_register.py-->line:52] - ERROR: 用例--成功-不带用户名--未通过
2020-04-11 12:37:43,433 -- [test_register.py-->line:53] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 12:37:43,434 -- [test_register.py-->line:54] - DEBUG: 实际结果{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:43,434 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-11 12:37:44,894 -- [test_register.py-->line:52] - ERROR: 用例--不输入类型--未通过
2020-04-11 12:37:44,894 -- [test_register.py-->line:53] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 12:37:44,895 -- [test_register.py-->line:54] - DEBUG: 实际结果{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:44,895 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-11 12:37:45,565 -- [test_updat.py-->line:74] - INFO: 用例--更改成功--通过
2020-04-11 12:37:45,940 -- [test_updat.py-->line:74] - INFO: 用例--更改成功--通过
2020-04-11 12:37:46,292 -- [test_updat.py-->line:74] - INFO: 用例--更改成功--通过
2020-04-11 12:37:46,581 -- [test_updat.py-->line:66] - ERROR: 用例--昵称10位--未通过
2020-04-11 12:37:46,581 -- [test_updat.py-->line:67] - DEBUG: 预期结果{'code': 0, 'msg': 'OK', 'reg_name': '1234567891'}
2020-04-11 12:37:46,581 -- [test_updat.py-->line:68] - DEBUG: 实际结果{'code': 2, 'msg': '用户昵称长度超过10位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:46,582 -- [test_updat.py-->line:69] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_updat.py", line 57, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-11 12:37:46,867 -- [test_updat.py-->line:74] - INFO: 用例--昵称大于10位--通过
2020-04-11 12:37:47,215 -- [test_updat.py-->line:74] - INFO: 用例--更改成功--通过
2020-04-11 12:37:48,038 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-整数--通过
2020-04-11 12:37:48,909 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 12:37:49,726 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 12:37:50,154 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-50万--通过
2020-04-11 12:37:50,611 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为空--未通过
2020-04-11 12:37:50,611 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 12:37:50,611 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:50,611 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:37:51,057 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id不存在--未通过
2020-04-11 12:37:51,057 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 12:37:51,057 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:51,057 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:37:51,322 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 12:37:51,322 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 12:37:51,323 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 1000001.0, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:51,323 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:37:51,739 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为小数--未通过
2020-04-11 12:37:51,739 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 12:37:51,740 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:51,740 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:37:52,023 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为0--未通过
2020-04-11 12:37:52,024 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:37:52,024 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 1000001.0, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:52,024 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:37:52,306 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 12:37:52,306 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:37:52,306 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:52,306 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 12:37:53,290 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 12:37:53,290 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 12:37:53,291 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:53,291 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 12:37:53,557 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 12:37:53,557 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:37:53,558 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:37:53,558 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 12:43:47,871 -- [test_register.py-->line:52] - ERROR: 用例--注册成功-带注册名--未通过
2020-04-11 12:43:47,897 -- [test_register.py-->line:53] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 12:43:47,897 -- [test_register.py-->line:54] - DEBUG: 实际结果{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:47,898 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-11 12:43:48,257 -- [test_register.py-->line:52] - ERROR: 用例--成功-不带用户名--未通过
2020-04-11 12:43:48,258 -- [test_register.py-->line:53] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 12:43:48,258 -- [test_register.py-->line:54] - DEBUG: 实际结果{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:48,259 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-11 12:43:49,619 -- [test_register.py-->line:52] - ERROR: 用例--不输入类型--未通过
2020-04-11 12:43:49,619 -- [test_register.py-->line:53] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 12:43:49,619 -- [test_register.py-->line:54] - DEBUG: 实际结果{'code': 2, 'msg': '无效的手机格式', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:49,619 -- [test_register.py-->line:55] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-11 12:43:50,346 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-整数--通过
2020-04-11 12:43:50,777 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 12:43:51,226 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 12:43:52,123 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-50万--通过
2020-04-11 12:43:52,569 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为空--未通过
2020-04-11 12:43:52,569 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 12:43:52,569 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:52,570 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:43:53,101 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id不存在--未通过
2020-04-11 12:43:53,102 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 12:43:53,102 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:53,102 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:43:53,373 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 12:43:53,374 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 12:43:53,374 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 497600.68, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:53,374 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:43:53,773 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为小数--未通过
2020-04-11 12:43:53,774 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 12:43:53,774 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:53,774 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:43:54,054 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为0--未通过
2020-04-11 12:43:54,055 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:43:54,055 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 497600.68, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:54,055 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:43:54,380 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 12:43:54,380 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:43:54,380 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:54,381 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 12:43:55,129 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 12:43:55,129 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 12:43:55,129 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:55,130 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 12:43:55,431 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 12:43:55,431 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:43:55,431 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:43:55,432 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 12:44:14,291 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-整数--通过
2020-04-11 12:44:14,767 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 12:44:15,196 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 12:44:15,554 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 12:44:15,554 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 12:44:15,554 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:15,554 -- [test_withdraw.py-->line:81] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 12:44:15,986 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为空--未通过
2020-04-11 12:44:15,986 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 12:44:15,987 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:15,987 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:44:16,456 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id不存在--未通过
2020-04-11 12:44:16,456 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 12:44:16,456 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:16,457 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:44:16,720 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 12:44:16,720 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 12:44:16,720 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 495200.36, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:16,721 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:44:17,621 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为小数--未通过
2020-04-11 12:44:17,622 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 12:44:17,622 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:17,622 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 12:44:17,896 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为0--未通过
2020-04-11 12:44:17,897 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:44:17,897 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 495200.36, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:17,897 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 12:44:18,147 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 12:44:18,147 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:44:18,147 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:18,148 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 12:44:18,868 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 12:44:18,869 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 12:44:18,869 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:18,869 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 12:44:19,155 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 12:44:19,155 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 12:44:19,156 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 12:44:19,156 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 13:54:57,050 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-整数--通过
2020-04-11 13:54:57,364 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 13:54:57,640 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 13:54:57,820 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 13:54:57,820 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 13:54:57,820 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:54:57,821 -- [test_withdraw.py-->line:81] - ERROR:  :: 0 != 1002
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1002
2020-04-11 13:54:58,107 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为空--未通过
2020-04-11 13:54:58,108 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 13:54:58,108 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:54:58,108 -- [test_withdraw.py-->line:81] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 13:54:58,774 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id不存在--未通过
2020-04-11 13:54:58,775 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 13:54:58,775 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:54:58,775 -- [test_withdraw.py-->line:81] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 13:54:58,886 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 13:54:58,886 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 13:54:58,886 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 492800.04, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:54:58,886 -- [test_withdraw.py-->line:81] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-11 13:54:59,156 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为小数--未通过
2020-04-11 13:54:59,157 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 13:54:59,157 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:54:59,158 -- [test_withdraw.py-->line:81] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 13:54:59,267 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为0--未通过
2020-04-11 13:54:59,267 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:54:59,268 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 492800.04, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:54:59,268 -- [test_withdraw.py-->line:81] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-11 13:54:59,366 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 13:54:59,366 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:54:59,367 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:54:59,367 -- [test_withdraw.py-->line:81] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-11 13:54:59,924 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 13:54:59,925 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 13:54:59,925 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:54:59,925 -- [test_withdraw.py-->line:81] - ERROR:  :: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600.222') != Decimal('0.00')
2020-04-11 13:55:00,033 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 13:55:00,033 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:55:00,033 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:00,033 -- [test_withdraw.py-->line:81] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\reports\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-11 13:55:48,993 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-整数--通过
2020-04-11 13:55:49,284 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 13:55:49,562 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 13:55:49,743 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 13:55:49,743 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 13:55:49,744 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:49,744 -- [test_withdraw.py-->line:81] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 13:55:50,013 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为空--未通过
2020-04-11 13:55:50,014 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 13:55:50,014 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:50,014 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 13:55:50,293 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id不存在--未通过
2020-04-11 13:55:50,293 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 13:55:50,293 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:50,294 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 13:55:50,408 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 13:55:50,408 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 13:55:50,409 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 490399.72, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:50,409 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 13:55:50,673 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为小数--未通过
2020-04-11 13:55:50,673 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 13:55:50,674 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:50,674 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 13:55:50,784 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为0--未通过
2020-04-11 13:55:50,784 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:55:50,785 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 490399.72, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:50,785 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 13:55:50,886 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 13:55:50,887 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:55:50,887 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:50,887 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 13:55:51,438 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 13:55:51,438 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 13:55:51,439 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:51,439 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 13:55:51,543 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 13:55:51,544 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:55:51,544 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:55:51,544 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 13:56:46,557 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-整数--通过
2020-04-11 13:56:47,260 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 13:56:47,715 -- [test_withdraw.py-->line:86] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 13:56:48,068 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 13:56:48,068 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 13:56:48,068 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:48,069 -- [test_withdraw.py-->line:81] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 13:56:48,548 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为空--未通过
2020-04-11 13:56:48,548 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 13:56:48,548 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:48,549 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 13:56:49,034 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id不存在--未通过
2020-04-11 13:56:49,034 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 13:56:49,034 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:49,035 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 13:56:49,374 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 13:56:49,374 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 13:56:49,375 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 487999.4, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:49,375 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 13:56:49,802 -- [test_withdraw.py-->line:78] - ERROR: 用例--会员id为小数--未通过
2020-04-11 13:56:49,803 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 13:56:49,803 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:49,803 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 13:56:50,077 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为0--未通过
2020-04-11 13:56:50,078 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:56:50,078 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 487999.4, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:50,078 -- [test_withdraw.py-->line:81] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 65, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 13:56:50,361 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 13:56:50,361 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:56:50,362 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:50,362 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 13:56:51,059 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 13:56:51,060 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 13:56:51,061 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:51,061 -- [test_withdraw.py-->line:81] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 76, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 13:56:51,358 -- [test_withdraw.py-->line:78] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 13:56:51,358 -- [test_withdraw.py-->line:79] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 13:56:51,359 -- [test_withdraw.py-->line:80] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 13:56:51,359 -- [test_withdraw.py-->line:81] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 14:15:53,118 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 14:15:53,668 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 14:15:54,177 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 14:15:54,563 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 14:15:54,564 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 14:15:54,564 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:54,564 -- [test_withdraw.py-->line:82] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 14:15:55,048 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为空--未通过
2020-04-11 14:15:55,048 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 14:15:55,048 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:55,048 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:15:55,482 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id不存在--未通过
2020-04-11 14:15:55,482 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 14:15:55,483 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:55,483 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:15:55,749 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 14:15:55,749 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 14:15:55,749 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 484398.76, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:55,750 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 14:15:56,243 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为小数--未通过
2020-04-11 14:15:56,243 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 14:15:56,243 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:56,244 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:15:56,522 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 14:15:56,540 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:15:56,541 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 484398.76, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:56,541 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 14:15:56,866 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 14:15:56,866 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:15:56,867 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:56,867 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 14:15:57,319 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 14:15:57,319 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 14:15:57,320 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:57,320 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 14:15:57,570 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 14:15:57,570 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:15:57,570 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:15:57,570 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 14:18:10,796 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 14:18:11,246 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 14:18:11,683 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 14:18:12,070 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 14:18:12,070 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 14:18:12,071 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:12,071 -- [test_withdraw.py-->line:82] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 14:18:12,507 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为空--未通过
2020-04-11 14:18:12,507 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 14:18:12,507 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:12,507 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:18:12,998 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id不存在--未通过
2020-04-11 14:18:12,999 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 14:18:12,999 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:12,999 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:18:13,288 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 14:18:13,288 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 14:18:13,288 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 481998.44, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:13,289 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 14:18:13,703 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为小数--未通过
2020-04-11 14:18:13,703 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 14:18:13,703 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:13,704 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:18:13,994 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 14:18:13,995 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:18:13,995 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 481998.44, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:13,995 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 14:18:14,248 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 14:18:14,249 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:18:14,249 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:14,250 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 14:18:14,536 -- [test_withdraw.py-->line:87] - INFO: 用例--提现金额为空--通过
2020-04-11 14:18:14,970 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 14:18:14,970 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 14:18:14,971 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:14,971 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 14:18:15,250 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 14:18:15,251 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:18:15,251 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 14:18:15,251 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 14:24:16,318 -- [test_2323.py-->line:91] - INFO: 用例--提现成功-整数--执行通过
2020-04-11 14:24:16,808 -- [test_2323.py-->line:91] - INFO: 用例--提现成功-1位小数--执行通过
2020-04-11 14:24:17,250 -- [test_2323.py-->line:91] - INFO: 用例--提现成功-2位小数--执行通过
2020-04-11 14:24:17,789 -- [test_2323.py-->line:83] - ERROR: 用例--提现成功-50万--执行未通过
2020-04-11 14:24:17,789 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 0, 'msg': 'OK'}
2020-04-11 14:24:17,789 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:17,790 -- [test_2323.py-->line:86] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 74, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 14:24:18,266 -- [test_2323.py-->line:83] - ERROR: 用例--会员id为空--执行未通过
2020-04-11 14:24:18,267 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 1, 'msg': '会员id为空'}
2020-04-11 14:24:18,267 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:18,267 -- [test_2323.py-->line:86] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 80, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:24:18,760 -- [test_2323.py-->line:83] - ERROR: 用例--会员id不存在--执行未通过
2020-04-11 14:24:18,761 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 2, 'msg': '会员不存在'}
2020-04-11 14:24:18,761 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:18,761 -- [test_2323.py-->line:86] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 80, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:24:19,037 -- [test_2323.py-->line:83] - ERROR: 用例--会员id为字符串--执行未通过
2020-04-11 14:24:19,037 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 14:24:19,038 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 479598.12, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:19,038 -- [test_2323.py-->line:86] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 74, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 14:24:19,498 -- [test_2323.py-->line:83] - ERROR: 用例--会员id为小数--执行未通过
2020-04-11 14:24:19,498 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 14:24:19,498 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:19,499 -- [test_2323.py-->line:86] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 80, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 14:24:19,802 -- [test_2323.py-->line:83] - ERROR: 用例--提现金额为0--执行未通过
2020-04-11 14:24:19,803 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:24:19,803 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 479598.12, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:19,803 -- [test_2323.py-->line:86] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 74, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 14:24:20,102 -- [test_2323.py-->line:83] - ERROR: 用例--提现金额为负数--执行未通过
2020-04-11 14:24:20,103 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:24:20,103 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:20,103 -- [test_2323.py-->line:86] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 75, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 14:24:20,377 -- [test_2323.py-->line:91] - INFO: 用例--提现金额为空--执行通过
2020-04-11 14:24:21,076 -- [test_2323.py-->line:83] - ERROR: 用例--提现金额-3位小数--执行未通过
2020-04-11 14:24:21,076 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 14:24:21,076 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:21,077 -- [test_2323.py-->line:86] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 80, in test_withdraw
    self.assertEqual(recharge_money,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 14:24:21,364 -- [test_2323.py-->line:83] - ERROR: 用例--提现金额-大于50万--执行未通过
2020-04-11 14:24:21,364 -- [test_2323.py-->line:84] - DEBUG: 预期结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 14:24:21,364 -- [test_2323.py-->line:85] - DEBUG: 实际结果：{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}
2020-04-11 14:24:21,365 -- [test_2323.py-->line:86] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_2323.py", line 75, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 14:53:19,596 -- [test_2323.py-->line:77] - ERROR: ---会员id为字符串---用例执行未通过
2020-04-11 14:53:19,870 -- [test_2323.py-->line:77] - ERROR: ---提现金额为0---用例执行未通过
2020-04-11 14:53:20,142 -- [test_2323.py-->line:77] - ERROR: ---提现金额为负数---用例执行未通过
2020-04-11 14:53:20,406 -- [test_2323.py-->line:81] - INFO: ---提现金额为空---用例执行通过
2020-04-11 14:53:20,660 -- [test_2323.py-->line:77] - ERROR: ---提现金额-大于50万---用例执行未通过
2020-04-11 14:53:48,966 -- [test_2323.py-->line:81] - INFO: ---提现成功-整数---用例执行通过
2020-04-11 14:53:49,399 -- [test_2323.py-->line:81] - INFO: ---提现成功-1位小数---用例执行通过
2020-04-11 14:53:49,823 -- [test_2323.py-->line:81] - INFO: ---提现成功-2位小数---用例执行通过
2020-04-11 14:53:50,266 -- [test_2323.py-->line:77] - ERROR: ---提现成功-50万---用例执行未通过
2020-04-11 14:53:50,699 -- [test_2323.py-->line:77] - ERROR: ---会员id为空---用例执行未通过
2020-04-11 14:53:51,147 -- [test_2323.py-->line:77] - ERROR: ---会员id不存在---用例执行未通过
2020-04-11 14:53:51,423 -- [test_2323.py-->line:77] - ERROR: ---会员id为字符串---用例执行未通过
2020-04-11 14:53:51,837 -- [test_2323.py-->line:77] - ERROR: ---会员id为小数---用例执行未通过
2020-04-11 14:53:52,101 -- [test_2323.py-->line:77] - ERROR: ---提现金额为0---用例执行未通过
2020-04-11 14:53:52,376 -- [test_2323.py-->line:77] - ERROR: ---提现金额为负数---用例执行未通过
2020-04-11 14:53:52,642 -- [test_2323.py-->line:81] - INFO: ---提现金额为空---用例执行通过
2020-04-11 14:53:53,068 -- [test_2323.py-->line:77] - ERROR: ---提现金额-3位小数---用例执行未通过
2020-04-11 14:53:53,340 -- [test_2323.py-->line:77] - ERROR: ---提现金额-大于50万---用例执行未通过
2020-04-11 14:55:45,858 -- [test_2323.py-->line:81] - INFO: ---提现成功-整数---用例执行通过
2020-04-11 14:55:46,138 -- [test_2323.py-->line:81] - INFO: ---提现成功-1位小数---用例执行通过
2020-04-11 14:55:46,419 -- [test_2323.py-->line:81] - INFO: ---提现成功-2位小数---用例执行通过
2020-04-11 14:55:46,693 -- [test_2323.py-->line:77] - ERROR: ---提现成功-50万---用例执行未通过
2020-04-11 14:55:46,970 -- [test_2323.py-->line:77] - ERROR: ---会员id为空---用例执行未通过
2020-04-11 14:55:47,696 -- [test_2323.py-->line:77] - ERROR: ---会员id不存在---用例执行未通过
2020-04-11 14:55:47,822 -- [test_2323.py-->line:77] - ERROR: ---会员id为字符串---用例执行未通过
2020-04-11 14:55:48,096 -- [test_2323.py-->line:77] - ERROR: ---会员id为小数---用例执行未通过
2020-04-11 14:55:48,319 -- [test_2323.py-->line:77] - ERROR: ---提现金额为0---用例执行未通过
2020-04-11 14:55:48,416 -- [test_2323.py-->line:77] - ERROR: ---提现金额为负数---用例执行未通过
2020-04-11 14:55:48,515 -- [test_2323.py-->line:81] - INFO: ---提现金额为空---用例执行通过
2020-04-11 14:55:48,783 -- [test_2323.py-->line:77] - ERROR: ---提现金额-3位小数---用例执行未通过
2020-04-11 14:55:48,886 -- [test_2323.py-->line:77] - ERROR: ---提现金额-大于50万---用例执行未通过
2020-04-11 15:07:09,163 -- [test_2323.py-->line:81] - INFO: ---提现成功-整数---用例执行通过
2020-04-11 15:07:09,554 -- [test_2323.py-->line:81] - INFO: ---提现成功-1位小数---用例执行通过
2020-04-11 15:07:09,835 -- [test_2323.py-->line:81] - INFO: ---提现成功-2位小数---用例执行通过
2020-04-11 15:07:10,100 -- [test_2323.py-->line:77] - ERROR: ---提现成功-50万---用例执行未通过
2020-04-11 15:07:10,397 -- [test_2323.py-->line:77] - ERROR: ---会员id为空---用例执行未通过
2020-04-11 15:07:10,663 -- [test_2323.py-->line:77] - ERROR: ---会员id不存在---用例执行未通过
2020-04-11 15:07:10,772 -- [test_2323.py-->line:77] - ERROR: ---会员id为字符串---用例执行未通过
2020-04-11 15:07:11,038 -- [test_2323.py-->line:77] - ERROR: ---会员id为小数---用例执行未通过
2020-04-11 15:07:11,132 -- [test_2323.py-->line:77] - ERROR: ---提现金额为0---用例执行未通过
2020-04-11 15:07:11,241 -- [test_2323.py-->line:77] - ERROR: ---提现金额为负数---用例执行未通过
2020-04-11 15:07:11,335 -- [test_2323.py-->line:81] - INFO: ---提现金额为空---用例执行通过
2020-04-11 15:07:11,585 -- [test_2323.py-->line:77] - ERROR: ---提现金额-3位小数---用例执行未通过
2020-04-11 15:07:11,678 -- [test_2323.py-->line:77] - ERROR: ---提现金额-大于50万---用例执行未通过
2020-04-11 15:09:46,282 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 15:09:46,797 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 15:09:47,047 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 15:09:47,329 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 15:09:47,329 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 15:09:47,329 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:09:47,329 -- [test_withdraw.py-->line:82] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 15:09:47,625 -- [test_withdraw.py-->line:87] - INFO: 用例--会员id为空--通过
2020-04-11 15:09:47,922 -- [test_withdraw.py-->line:87] - INFO: 用例--会员id不存在--通过
2020-04-11 15:09:48,235 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 15:09:48,235 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 15:09:48,235 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 469396.84, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:09:48,235 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 15:09:48,516 -- [test_withdraw.py-->line:87] - INFO: 用例--会员id为小数--通过
2020-04-11 15:09:48,844 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 15:09:48,844 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:09:48,844 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 469396.84, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:09:48,844 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 15:09:49,157 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 15:09:49,157 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:09:49,157 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:09:49,157 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 15:09:49,438 -- [test_withdraw.py-->line:87] - INFO: 用例--提现金额为空--通过
2020-04-11 15:09:49,735 -- [test_withdraw.py-->line:87] - INFO: 用例--提现金额-3位小数--通过
2020-04-11 15:09:50,047 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 15:09:50,047 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:09:50,047 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:09:50,047 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 15:09:50,344 -- [test_withdraw.py-->line:87] - INFO: 用例--提现金额-非数字--通过
2020-04-11 15:12:47,590 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 15:12:48,043 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 15:12:48,512 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 15:12:48,777 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 15:12:48,777 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 15:12:48,777 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:48,777 -- [test_withdraw.py-->line:82] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 15:12:49,215 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为空--未通过
2020-04-11 15:12:49,215 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 15:12:49,215 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:49,215 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:12:49,621 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id不存在--未通过
2020-04-11 15:12:49,621 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 15:12:49,621 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:49,621 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:12:49,965 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 15:12:49,965 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 15:12:49,965 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 466996.52, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:49,965 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 15:12:50,402 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为小数--未通过
2020-04-11 15:12:50,402 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 15:12:50,402 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:50,402 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:12:50,668 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 15:12:50,668 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:12:50,668 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 466996.52, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:50,668 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 15:12:50,949 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 15:12:50,965 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:12:50,965 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:50,965 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 15:12:51,668 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 15:12:51,668 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 15:12:51,668 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:51,668 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 15:12:51,949 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 15:12:51,949 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:12:51,949 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:12:51,949 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 15:17:24,902 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 15:17:25,386 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 15:17:25,871 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 15:17:26,230 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 15:17:26,230 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 15:17:26,230 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:26,230 -- [test_withdraw.py-->line:82] - ERROR:  :: 0 != 1002
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1002
2020-04-11 15:17:26,730 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为空--未通过
2020-04-11 15:17:26,730 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 15:17:26,730 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:26,730 -- [test_withdraw.py-->line:82] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 15:17:27,246 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id不存在--未通过
2020-04-11 15:17:27,246 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 15:17:27,246 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:27,246 -- [test_withdraw.py-->line:82] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 15:17:27,589 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 15:17:27,589 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 15:17:27,589 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 464596.2, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:27,589 -- [test_withdraw.py-->line:82] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-11 15:17:28,167 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为小数--未通过
2020-04-11 15:17:28,167 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 15:17:28,167 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:28,167 -- [test_withdraw.py-->line:82] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 15:17:28,496 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 15:17:28,496 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:17:28,496 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 464596.2, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:28,496 -- [test_withdraw.py-->line:82] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-11 15:17:28,792 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 15:17:28,792 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:17:28,792 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:28,792 -- [test_withdraw.py-->line:82] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-11 15:17:29,574 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 15:17:29,574 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 15:17:29,574 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:29,574 -- [test_withdraw.py-->line:82] - ERROR:  :: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600.222') != Decimal('0.00')
2020-04-11 15:17:29,933 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 15:17:29,933 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:17:29,933 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:17:29,933 -- [test_withdraw.py-->line:82] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-11 15:19:15,511 -- [test_add.py-->line:84] - INFO: 用例--加标成功--通过
2020-04-11 15:19:15,730 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款人id为空--通过
2020-04-11 15:19:15,949 -- [test_add.py-->line:84] - INFO: 用例--加标失败—标题为空--通过
2020-04-11 15:19:16,183 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为空--通过
2020-04-11 15:19:16,464 -- [test_add.py-->line:84] - INFO: 用例--加标失败—年利率为空--通过
2020-04-11 15:19:16,714 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款期限为空--通过
2020-04-11 15:19:16,933 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款期限类型为空--通过
2020-04-11 15:19:17,183 -- [test_add.py-->line:84] - INFO: 用例--加标失败—竞标天数为空--通过
2020-04-11 15:19:17,667 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款人id不是当前登录用户--通过
2020-04-11 15:19:17,902 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为负数--通过
2020-04-11 15:19:18,136 -- [test_add.py-->line:84] - INFO: 用例--加标失败—借款金额为小数--通过
2020-04-11 15:19:56,402 -- [test_invest.py-->line:61] - INFO: 用例借款人正常登录通过
2020-04-11 15:19:56,652 -- [test_invest.py-->line:61] - INFO: 用例借款人加标通过
2020-04-11 15:19:57,058 -- [test_invest.py-->line:61] - INFO: 用例管理员正常登录通过
2020-04-11 15:19:57,340 -- [test_invest.py-->line:61] - INFO: 用例管理员审核通过
2020-04-11 15:19:57,809 -- [test_invest.py-->line:61] - INFO: 用例投资人正常登录通过
2020-04-11 15:19:58,058 -- [test_invest.py-->line:61] - INFO: 用例充值成功-整数通过
2020-04-11 15:19:58,308 -- [test_invest.py-->line:61] - INFO: 用例投资人正常投资通过
2020-04-11 15:19:58,558 -- [test_invest.py-->line:61] - INFO: 用例投资人id为空通过
2020-04-11 15:19:58,840 -- [test_invest.py-->line:61] - INFO: 用例标id为空通过
2020-04-11 15:19:59,152 -- [test_invest.py-->line:61] - INFO: 用例投资金额为空通过
2020-04-11 15:24:11,231 -- [test_invest.py-->line:61] - INFO: 用例借款人正常登录通过
2020-04-11 15:24:11,450 -- [test_invest.py-->line:61] - INFO: 用例借款人加标通过
2020-04-11 15:24:11,872 -- [test_invest.py-->line:61] - INFO: 用例管理员正常登录通过
2020-04-11 15:24:12,106 -- [test_invest.py-->line:61] - INFO: 用例管理员审核通过
2020-04-11 15:24:12,575 -- [test_invest.py-->line:61] - INFO: 用例投资人正常登录通过
2020-04-11 15:24:12,841 -- [test_invest.py-->line:61] - INFO: 用例充值成功-整数通过
2020-04-11 15:24:13,091 -- [test_invest.py-->line:61] - INFO: 用例投资人正常投资通过
2020-04-11 15:24:13,341 -- [test_invest.py-->line:61] - INFO: 用例投资人id为空通过
2020-04-11 15:24:13,591 -- [test_invest.py-->line:61] - INFO: 用例标id为空通过
2020-04-11 15:24:13,841 -- [test_invest.py-->line:61] - INFO: 用例投资金额为空通过
2020-04-11 15:24:53,608 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 15:24:54,047 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 15:24:54,485 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 15:24:54,797 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 15:24:54,797 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 15:24:54,797 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:54,797 -- [test_withdraw.py-->line:82] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 15:24:55,313 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为空--未通过
2020-04-11 15:24:55,313 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 15:24:55,313 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:55,313 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:24:55,813 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id不存在--未通过
2020-04-11 15:24:55,813 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 15:24:55,813 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:55,813 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:24:56,110 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 15:24:56,110 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 15:24:56,110 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 462195.88, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:56,110 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 15:24:56,532 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为小数--未通过
2020-04-11 15:24:56,532 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 15:24:56,532 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:56,532 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:24:56,782 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 15:24:56,782 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:24:56,782 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 462195.88, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:56,782 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 15:24:57,125 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 15:24:57,125 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:24:57,125 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:57,125 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 15:24:57,813 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 15:24:57,813 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 15:24:57,813 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:57,813 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 15:24:58,063 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 15:24:58,063 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:24:58,063 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:24:58,063 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 15:26:06,677 -- [test_invest.py-->line:61] - INFO: 用例借款人正常登录通过
2020-04-11 15:26:06,958 -- [test_invest.py-->line:61] - INFO: 用例借款人加标通过
2020-04-11 15:26:07,380 -- [test_invest.py-->line:61] - INFO: 用例管理员正常登录通过
2020-04-11 15:26:08,052 -- [test_invest.py-->line:61] - INFO: 用例管理员审核通过
2020-04-11 15:26:08,458 -- [test_invest.py-->line:61] - INFO: 用例投资人正常登录通过
2020-04-11 15:26:08,693 -- [test_invest.py-->line:61] - INFO: 用例充值成功-整数通过
2020-04-11 15:26:08,943 -- [test_invest.py-->line:61] - INFO: 用例投资人正常投资通过
2020-04-11 15:26:09,228 -- [test_invest.py-->line:61] - INFO: 用例投资人id为空通过
2020-04-11 15:26:09,478 -- [test_invest.py-->line:61] - INFO: 用例标id为空通过
2020-04-11 15:26:09,712 -- [test_invest.py-->line:61] - INFO: 用例投资金额为空通过
2020-04-11 15:26:39,020 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 15:26:39,463 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 15:26:39,885 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 15:26:40,135 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 15:26:40,135 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 15:26:40,135 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:40,135 -- [test_withdraw.py-->line:82] - ERROR:  :: 0 != 1002
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1002
2020-04-11 15:26:40,557 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为空--未通过
2020-04-11 15:26:40,557 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 15:26:40,557 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:40,557 -- [test_withdraw.py-->line:82] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 15:26:40,994 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id不存在--未通过
2020-04-11 15:26:40,994 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 15:26:40,994 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:40,994 -- [test_withdraw.py-->line:82] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 15:26:41,229 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 15:26:41,229 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 15:26:41,229 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 459795.56, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:41,229 -- [test_withdraw.py-->line:82] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-11 15:26:41,619 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为小数--未通过
2020-04-11 15:26:41,619 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 15:26:41,619 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:41,619 -- [test_withdraw.py-->line:82] - ERROR:  :: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600') != Decimal('0.00')
2020-04-11 15:26:41,885 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 15:26:41,885 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:26:41,885 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 459795.56, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:41,885 -- [test_withdraw.py-->line:82] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-04-11 15:26:42,119 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 15:26:42,119 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:26:42,119 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:42,119 -- [test_withdraw.py-->line:82] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-11 15:26:42,760 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 15:26:42,760 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 15:26:42,775 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:42,775 -- [test_withdraw.py-->line:82] - ERROR:  :: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: Decimal('600.222') != Decimal('0.00')
2020-04-11 15:26:43,025 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 15:26:43,025 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:26:43,025 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:26:43,025 -- [test_withdraw.py-->line:82] - ERROR:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\pycharm\PyCharm Community Edition 2019.3.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 余额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-04-11 15:27:07,908 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 15:27:08,330 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 15:27:08,767 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 15:27:09,033 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 15:27:09,033 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 15:27:09,033 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:09,033 -- [test_withdraw.py-->line:82] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 15:27:09,451 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为空--未通过
2020-04-11 15:27:09,451 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 1, 'msg': '会员id为空'}
2020-04-11 15:27:09,451 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1, 'msg': '会员id为空', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:09,451 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:27:09,857 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id不存在--未通过
2020-04-11 15:27:09,857 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '会员不存在'}
2020-04-11 15:27:09,857 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '会员不存在', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:09,857 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:27:10,107 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 15:27:10,107 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 15:27:10,107 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 457395.24, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:10,122 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 15:27:10,529 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为小数--未通过
2020-04-11 15:27:10,529 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数值参数格式不正确'}
2020-04-11 15:27:10,529 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '数值参数格式不正确', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:10,529 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600') != Decimal('0.00')
2020-04-11 15:27:10,779 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 15:27:10,779 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:27:10,779 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 457395.24, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:10,779 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 15:27:11,013 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 15:27:11,013 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:27:11,013 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:11,013 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 15:27:11,669 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-3位小数--未通过
2020-04-11 15:27:11,669 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额小数超过两位'}
2020-04-11 15:27:11,669 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额小数超过两位', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:11,669 -- [test_withdraw.py-->line:82] - ERROR: Decimal('600.222') != Decimal('0.00')
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 77, in test_withdraw
    self.assertEqual(my_data,start_money-end_money)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('600.222') != Decimal('0.00')
2020-04-11 15:27:11,919 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 15:27:11,919 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 15:27:11,919 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 15:27:11,919 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 16:11:29,533 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-整数--通过
2020-04-11 16:11:30,018 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-1位小数--通过
2020-04-11 16:11:30,611 -- [test_withdraw.py-->line:87] - INFO: 用例--提现成功-2位小数--通过
2020-04-11 16:11:30,939 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现成功-50万--未通过
2020-04-11 16:11:30,939 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 0, 'msg': 'OK'}
2020-04-11 16:11:30,939 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 1002, 'msg': '余额不足', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 16:11:30,939 -- [test_withdraw.py-->line:82] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-04-11 16:11:31,190 -- [test_withdraw.py-->line:87] - INFO: 用例--会员id为空--通过
2020-04-11 16:11:31,439 -- [test_withdraw.py-->line:87] - INFO: 用例--会员id不存在--通过
2020-04-11 16:11:31,705 -- [test_withdraw.py-->line:79] - ERROR: 用例--会员id为字符串--未通过
2020-04-11 16:11:31,705 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '数字格式化异常'}
2020-04-11 16:11:31,705 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 452594.6, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 16:11:31,705 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 16:11:31,939 -- [test_withdraw.py-->line:87] - INFO: 用例--会员id为小数--通过
2020-04-11 16:11:32,174 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为0--未通过
2020-04-11 16:11:32,174 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 16:11:32,174 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': {'id': 8025843, 'leave_amount': 452594.6, 'mobile_phone': '13367855578', 'reg_name': '木森667', 'reg_time': '2020-04-07 21:11:05.0', 'type': 1}, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 16:11:32,174 -- [test_withdraw.py-->line:82] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-11 16:11:32,439 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额为负数--未通过
2020-04-11 16:11:32,439 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 16:11:32,439 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 16:11:32,439 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 16:11:32,674 -- [test_withdraw.py-->line:87] - INFO: 用例--提现金额为空--通过
2020-04-11 16:11:32,893 -- [test_withdraw.py-->line:87] - INFO: 用例--提现金额-3位小数--通过
2020-04-11 16:11:33,142 -- [test_withdraw.py-->line:79] - ERROR: 用例--提现金额-大于50万--未通过
2020-04-11 16:11:33,142 -- [test_withdraw.py-->line:80] - DEBUG: 预期结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于500000'}
2020-04-11 16:11:33,142 -- [test_withdraw.py-->line:81] - DEBUG: 实际结果{'code': 2, 'msg': '余额必须大于0并且小于或者等于5000000', 'data': None, 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-11 16:11:33,142 -- [test_withdraw.py-->line:82] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-11 16:11:33,408 -- [test_withdraw.py-->line:87] - INFO: 用例--提现金额-非数字--通过
2020-04-13 11:02:00,217 -- [test_register.py-->line:49] - ERROR: 这条用例注册成功-带注册名报错
2020-04-13 11:02:00,244 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:02:00,532 -- [test_register.py-->line:49] - ERROR: 这条用例成功-不带用户名报错
2020-04-13 11:02:00,533 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:02:01,764 -- [test_register.py-->line:49] - ERROR: 这条用例不输入类型报错
2020-04-13 11:02:01,764 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:02:22,332 -- [test_register.py-->line:49] - ERROR: 这条用例注册成功-带注册名报错
2020-04-13 11:02:22,333 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:02:22,649 -- [test_register.py-->line:49] - ERROR: 这条用例成功-不带用户名报错
2020-04-13 11:02:22,649 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:02:23,860 -- [test_register.py-->line:49] - ERROR: 这条用例不输入类型报错
2020-04-13 11:02:23,861 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:10:31,647 -- [test_register.py-->line:49] - ERROR: 这条用例注册成功-带注册名报错
2020-04-13 11:10:31,647 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:10:31,822 -- [test_register.py-->line:49] - ERROR: 这条用例成功-不带用户名报错
2020-04-13 11:10:31,822 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:10:32,002 -- [test_register.py-->line:54] - INFO: 这条用例不输入手机号通过了
2020-04-13 11:10:32,192 -- [test_register.py-->line:54] - INFO: 这条用例手机号长度10位通过了
2020-04-13 11:10:32,383 -- [test_register.py-->line:54] - INFO: 这条用例手机号长度12位通过了
2020-04-13 11:10:32,564 -- [test_register.py-->line:54] - INFO: 这条用例手机号含有非法字符通过了
2020-04-13 11:10:32,852 -- [test_register.py-->line:54] - INFO: 这条用例已注册过的手机号通过了
2020-04-13 11:10:33,018 -- [test_register.py-->line:54] - INFO: 这条用例密码7位通过了
2020-04-13 11:10:33,295 -- [test_register.py-->line:54] - INFO: 这条用例密码17位通过了
2020-04-13 11:10:33,467 -- [test_register.py-->line:54] - INFO: 这条用例不输入密码通过了
2020-04-13 11:10:33,650 -- [test_register.py-->line:54] - INFO: 这条用例注册名11位通过了
2020-04-13 11:10:33,845 -- [test_register.py-->line:54] - INFO: 这条用例类型输入非0，1内容通过了
2020-04-13 11:10:34,016 -- [test_register.py-->line:49] - ERROR: 这条用例不输入类型报错
2020-04-13 11:10:34,017 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:10:48,859 -- [test_register.py-->line:49] - ERROR: 这条用例注册成功-带注册名报错
2020-04-13 11:10:48,859 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:10:49,130 -- [test_register.py-->line:49] - ERROR: 这条用例成功-不带用户名报错
2020-04-13 11:10:49,130 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:10:49,415 -- [test_register.py-->line:54] - INFO: 这条用例不输入手机号通过了
2020-04-13 11:10:49,793 -- [test_register.py-->line:54] - INFO: 这条用例手机号长度10位通过了
2020-04-13 11:10:50,023 -- [test_register.py-->line:54] - INFO: 这条用例手机号长度12位通过了
2020-04-13 11:10:50,199 -- [test_register.py-->line:54] - INFO: 这条用例手机号含有非法字符通过了
2020-04-13 11:10:50,543 -- [test_register.py-->line:54] - INFO: 这条用例已注册过的手机号通过了
2020-04-13 11:10:50,731 -- [test_register.py-->line:54] - INFO: 这条用例密码7位通过了
2020-04-13 11:10:50,898 -- [test_register.py-->line:54] - INFO: 这条用例密码17位通过了
2020-04-13 11:10:51,081 -- [test_register.py-->line:54] - INFO: 这条用例不输入密码通过了
2020-04-13 11:10:51,253 -- [test_register.py-->line:54] - INFO: 这条用例注册名11位通过了
2020-04-13 11:10:51,432 -- [test_register.py-->line:54] - INFO: 这条用例类型输入非0，1内容通过了
2020-04-13 11:10:51,592 -- [test_register.py-->line:49] - ERROR: 这条用例不输入类型报错
2020-04-13 11:10:51,592 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:11:00,762 -- [test_register.py-->line:49] - ERROR: 这条用例注册成功-带注册名报错
2020-04-13 11:11:00,763 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:11:01,029 -- [test_register.py-->line:49] - ERROR: 这条用例成功-不带用户名报错
2020-04-13 11:11:01,029 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:11:01,298 -- [test_register.py-->line:54] - INFO: 这条用例不输入手机号通过了
2020-04-13 11:11:01,557 -- [test_register.py-->line:54] - INFO: 这条用例手机号长度10位通过了
2020-04-13 11:11:01,830 -- [test_register.py-->line:54] - INFO: 这条用例手机号长度12位通过了
2020-04-13 11:11:02,110 -- [test_register.py-->line:54] - INFO: 这条用例手机号含有非法字符通过了
2020-04-13 11:11:02,487 -- [test_register.py-->line:54] - INFO: 这条用例已注册过的手机号通过了
2020-04-13 11:11:02,726 -- [test_register.py-->line:54] - INFO: 这条用例密码7位通过了
2020-04-13 11:11:02,962 -- [test_register.py-->line:54] - INFO: 这条用例密码17位通过了
2020-04-13 11:11:03,214 -- [test_register.py-->line:54] - INFO: 这条用例不输入密码通过了
2020-04-13 11:11:03,462 -- [test_register.py-->line:54] - INFO: 这条用例注册名11位通过了
2020-04-13 11:11:03,716 -- [test_register.py-->line:54] - INFO: 这条用例类型输入非0，1内容通过了
2020-04-13 11:11:03,960 -- [test_register.py-->line:49] - ERROR: 这条用例不输入类型报错
2020-04-13 11:11:03,960 -- [test_register.py-->line:50] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_register.py", line 42, in test_register
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 11:38:50,607 -- [test_login.py-->line:42] - INFO: 这个用例登录成功通过
2020-04-13 11:38:50,769 -- [test_login.py-->line:37] - ERROR: 该用例手机号为空报错
2020-04-13 11:38:50,770 -- [test_login.py-->line:38] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_login.py", line 34, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 11:38:50,937 -- [test_login.py-->line:37] - ERROR: 该用例密码为空报错
2020-04-13 11:38:50,937 -- [test_login.py-->line:38] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_login.py", line 34, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 11:38:51,240 -- [test_login.py-->line:42] - INFO: 这个用例手机号未注册通过
2020-04-13 11:38:51,557 -- [test_login.py-->line:42] - INFO: 这个用例密码错误通过
2020-04-13 11:38:51,741 -- [test_login.py-->line:42] - INFO: 这个用例手机号格式错误通过
2020-04-13 11:39:00,084 -- [test_login.py-->line:42] - INFO: 这个用例登录成功通过
2020-04-13 11:39:00,339 -- [test_login.py-->line:37] - ERROR: 该用例手机号为空报错
2020-04-13 11:39:00,339 -- [test_login.py-->line:38] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_login.py", line 34, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 11:39:00,615 -- [test_login.py-->line:37] - ERROR: 该用例密码为空报错
2020-04-13 11:39:00,615 -- [test_login.py-->line:38] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_login.py", line 34, in test_login
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 11:39:01,059 -- [test_login.py-->line:42] - INFO: 这个用例手机号未注册通过
2020-04-13 11:39:01,482 -- [test_login.py-->line:42] - INFO: 这个用例密码错误通过
2020-04-13 11:39:01,731 -- [test_login.py-->line:42] - INFO: 这个用例手机号格式错误通过
2020-04-13 14:25:58,515 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-整数执行通过
2020-04-13 14:25:59,281 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-1位小数执行通过
2020-04-13 14:25:59,974 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-2位小数执行通过
2020-04-13 14:26:00,714 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-50万执行通过
2020-04-13 14:26:01,228 -- [test_recharge.py-->line:74] - INFO: 这条用例会员id为空执行通过
2020-04-13 14:26:01,579 -- [test_recharge.py-->line:74] - INFO: 这条用例id不是当前登录的用户执行通过
2020-04-13 14:26:01,959 -- [test_recharge.py-->line:69] - ERROR: 这条用例会员id为字符串没有通过
2020-04-13 14:26:01,959 -- [test_recharge.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 14:26:02,557 -- [test_recharge.py-->line:74] - INFO: 这条用例会员id为小数执行通过
2020-04-13 14:26:02,920 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额为0没有通过
2020-04-13 14:26:02,920 -- [test_recharge.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 14:26:03,280 -- [test_recharge.py-->line:74] - INFO: 这条用例充值金额为负数执行通过
2020-04-13 14:26:03,638 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额为空没有通过
2020-04-13 14:26:03,638 -- [test_recharge.py-->line:70] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 14:26:03,999 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额-3位小数没有通过
2020-04-13 14:26:03,999 -- [test_recharge.py-->line:70] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 60, in test_recharge
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 14:26:04,347 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额-大于50万没有通过
2020-04-13 14:26:04,347 -- [test_recharge.py-->line:70] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 60, in test_recharge
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 14:26:04,703 -- [test_recharge.py-->line:74] - INFO: 这条用例充值金额-非数字执行通过
2020-04-13 14:36:44,902 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-整数执行通过
2020-04-13 14:36:45,619 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-1位小数执行通过
2020-04-13 14:36:46,218 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-2位小数执行通过
2020-04-13 14:36:46,815 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-50万执行通过
2020-04-13 14:36:47,267 -- [test_recharge.py-->line:74] - INFO: 这条用例会员id为空执行通过
2020-04-13 14:36:47,517 -- [test_recharge.py-->line:74] - INFO: 这条用例id不是当前登录的用户执行通过
2020-04-13 14:36:47,853 -- [test_recharge.py-->line:69] - ERROR: 这条用例会员id为字符串没有通过
2020-04-13 14:36:47,853 -- [test_recharge.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 14:36:48,310 -- [test_recharge.py-->line:74] - INFO: 这条用例会员id为小数执行通过
2020-04-13 14:36:48,577 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额为0没有通过
2020-04-13 14:36:48,578 -- [test_recharge.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 14:36:48,850 -- [test_recharge.py-->line:74] - INFO: 这条用例充值金额为负数执行通过
2020-04-13 14:36:49,122 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额为空没有通过
2020-04-13 14:36:49,122 -- [test_recharge.py-->line:70] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 14:36:50,623 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额-3位小数没有通过
2020-04-13 14:36:50,624 -- [test_recharge.py-->line:70] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 60, in test_recharge
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 14:36:50,890 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额-大于50万没有通过
2020-04-13 14:36:50,890 -- [test_recharge.py-->line:70] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 60, in test_recharge
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 14:36:51,163 -- [test_recharge.py-->line:74] - INFO: 这条用例充值金额-非数字执行通过
2020-04-13 14:37:01,058 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-整数执行通过
2020-04-13 14:37:01,808 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-1位小数执行通过
2020-04-13 14:37:02,621 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-2位小数执行通过
2020-04-13 14:37:03,601 -- [test_recharge.py-->line:74] - INFO: 这条用例充值成功-50万执行通过
2020-04-13 14:37:04,131 -- [test_recharge.py-->line:74] - INFO: 这条用例会员id为空执行通过
2020-04-13 14:37:04,474 -- [test_recharge.py-->line:74] - INFO: 这条用例id不是当前登录的用户执行通过
2020-04-13 14:37:04,828 -- [test_recharge.py-->line:69] - ERROR: 这条用例会员id为字符串没有通过
2020-04-13 14:37:04,829 -- [test_recharge.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 14:37:05,364 -- [test_recharge.py-->line:74] - INFO: 这条用例会员id为小数执行通过
2020-04-13 14:37:05,717 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额为0没有通过
2020-04-13 14:37:05,717 -- [test_recharge.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 14:37:06,069 -- [test_recharge.py-->line:74] - INFO: 这条用例充值金额为负数执行通过
2020-04-13 14:37:06,421 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额为空没有通过
2020-04-13 14:37:06,421 -- [test_recharge.py-->line:70] - ERROR: 1 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 59, in test_recharge
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-04-13 14:37:06,755 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额-3位小数没有通过
2020-04-13 14:37:06,755 -- [test_recharge.py-->line:70] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 60, in test_recharge
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-04-13 14:37:07,083 -- [test_recharge.py-->line:69] - ERROR: 这条用例充值金额-大于50万没有通过
2020-04-13 14:37:07,083 -- [test_recharge.py-->line:70] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_recharge.py", line 60, in test_recharge
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-04-13 14:37:07,411 -- [test_recharge.py-->line:74] - INFO: 这条用例充值金额-非数字执行通过
2020-04-13 15:46:01,694 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为空通过
2020-04-13 15:46:01,946 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id不存在通过
2020-04-13 15:46:02,234 -- [test_withdraw.py-->line:69] - ERROR: 该用例会员id为字符串未通过
2020-04-13 15:46:02,235 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:46:02,673 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为小数通过
2020-04-13 15:46:02,936 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为0未通过
2020-04-13 15:46:02,937 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:46:03,313 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为负数未通过
2020-04-13 15:46:03,313 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:46:03,565 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额为空通过
2020-04-13 15:46:03,934 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-3位小数通过
2020-04-13 15:46:04,336 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额-大于50万未通过
2020-04-13 15:46:04,336 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:46:04,590 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-非数字通过
2020-04-13 15:46:14,061 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为空通过
2020-04-13 15:46:14,426 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id不存在通过
2020-04-13 15:46:14,800 -- [test_withdraw.py-->line:69] - ERROR: 该用例会员id为字符串未通过
2020-04-13 15:46:14,800 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:46:15,338 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为小数通过
2020-04-13 15:46:15,695 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为0未通过
2020-04-13 15:46:15,695 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:46:16,067 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为负数未通过
2020-04-13 15:46:16,067 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:46:16,425 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额为空通过
2020-04-13 15:46:16,795 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-3位小数通过
2020-04-13 15:46:17,168 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额-大于50万未通过
2020-04-13 15:46:17,168 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:46:17,535 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-非数字通过
2020-04-13 15:48:01,003 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为空通过
2020-04-13 15:48:01,263 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id不存在通过
2020-04-13 15:48:01,545 -- [test_withdraw.py-->line:69] - ERROR: 该用例会员id为字符串未通过
2020-04-13 15:48:01,545 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:48:01,994 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为小数通过
2020-04-13 15:48:02,268 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为0未通过
2020-04-13 15:48:02,268 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:48:02,570 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为负数未通过
2020-04-13 15:48:02,571 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:48:02,878 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额为空通过
2020-04-13 15:48:03,169 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-3位小数通过
2020-04-13 15:48:03,469 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额-大于50万未通过
2020-04-13 15:48:03,469 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:48:03,771 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-非数字通过
2020-04-13 15:48:14,564 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为空通过
2020-04-13 15:48:14,927 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id不存在通过
2020-04-13 15:48:15,273 -- [test_withdraw.py-->line:69] - ERROR: 该用例会员id为字符串未通过
2020-04-13 15:48:15,274 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:48:15,796 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为小数通过
2020-04-13 15:48:16,144 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为0未通过
2020-04-13 15:48:16,144 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:48:16,499 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为负数未通过
2020-04-13 15:48:16,499 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:48:16,859 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额为空通过
2020-04-13 15:48:17,186 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-3位小数通过
2020-04-13 15:48:17,523 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额-大于50万未通过
2020-04-13 15:48:17,523 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:48:17,876 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-非数字通过
2020-04-13 15:52:16,722 -- [test_withdraw.py-->line:74] - INFO: 该用例提现成功-整数通过
2020-04-13 15:52:17,412 -- [test_withdraw.py-->line:74] - INFO: 该用例提现成功-1位小数通过
2020-04-13 15:52:18,133 -- [test_withdraw.py-->line:74] - INFO: 该用例提现成功-2位小数通过
2020-04-13 15:52:18,841 -- [test_withdraw.py-->line:74] - INFO: 该用例提现成功-50万通过
2020-04-13 15:52:19,378 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为空通过
2020-04-13 15:52:19,760 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id不存在通过
2020-04-13 15:52:20,137 -- [test_withdraw.py-->line:69] - ERROR: 该用例会员id为字符串未通过
2020-04-13 15:52:20,137 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:52:20,844 -- [test_withdraw.py-->line:74] - INFO: 该用例会员id为小数通过
2020-04-13 15:52:21,225 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为0未通过
2020-04-13 15:52:21,225 -- [test_withdraw.py-->line:70] - ERROR: 2 != 0
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 59, in test_withdraw
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-04-13 15:52:21,642 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额为负数未通过
2020-04-13 15:52:21,642 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:52:22,065 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额为空通过
2020-04-13 15:52:22,502 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-3位小数通过
2020-04-13 15:52:22,969 -- [test_withdraw.py-->line:69] - ERROR: 该用例提现金额-大于50万未通过
2020-04-13 15:52:22,969 -- [test_withdraw.py-->line:70] - ERROR: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_withdraw.py", line 60, in test_withdraw
    self.assertEqual(expected['msg'],res['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '余额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 余额必须大于0并且小于或者等于500000
+ 余额必须大于0并且小于或者等于5000000
?                      +

2020-04-13 15:52:23,380 -- [test_withdraw.py-->line:74] - INFO: 该用例提现金额-非数字通过
2020-04-13 18:46:30,136 -- [test_update.py-->line:60] - ERROR: 该用例更改成功报错
2020-04-13 18:46:30,164 -- [test_update.py-->line:61] - ERROR: 'sda' != {'reg_name': 'sda'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 58, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'sda' != {'reg_name': 'sda'}
2020-04-13 18:46:30,557 -- [test_update.py-->line:60] - ERROR: 该用例更改成功报错
2020-04-13 18:46:30,557 -- [test_update.py-->line:61] - ERROR: '123' != {'reg_name': '123'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 58, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '123' != {'reg_name': '123'}
2020-04-13 18:46:30,912 -- [test_update.py-->line:60] - ERROR: 该用例更改成功报错
2020-04-13 18:46:30,912 -- [test_update.py-->line:61] - ERROR: '@as' != {'reg_name': '@as'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 58, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '@as' != {'reg_name': '@as'}
2020-04-13 18:46:31,224 -- [test_update.py-->line:60] - ERROR: 该用例昵称10位报错
2020-04-13 18:46:31,224 -- [test_update.py-->line:61] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 52, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 18:46:31,470 -- [test_update.py-->line:65] - INFO: 该用例昵称大于10位通过
2020-04-13 18:46:31,850 -- [test_update.py-->line:60] - ERROR: 该用例更改成功报错
2020-04-13 18:46:31,851 -- [test_update.py-->line:61] - ERROR: '中国' != {'reg_name': '中国'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 58, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '中国' != {'reg_name': '中国'}
2020-04-13 18:48:39,183 -- [test_update.py-->line:60] - ERROR: 该用例更改成功报错
2020-04-13 18:48:39,183 -- [test_update.py-->line:61] - ERROR: 'sda' != {'reg_name': 'sda'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 58, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'sda' != {'reg_name': 'sda'}
2020-04-13 18:48:39,554 -- [test_update.py-->line:60] - ERROR: 该用例更改成功报错
2020-04-13 18:48:39,555 -- [test_update.py-->line:61] - ERROR: '123' != {'reg_name': '123'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 58, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '123' != {'reg_name': '123'}
2020-04-13 18:48:39,914 -- [test_update.py-->line:60] - ERROR: 该用例更改成功报错
2020-04-13 18:48:39,914 -- [test_update.py-->line:61] - ERROR: '@as' != {'reg_name': '@as'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 58, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '@as' != {'reg_name': '@as'}
2020-04-13 18:48:40,218 -- [test_update.py-->line:60] - ERROR: 该用例昵称10位报错
2020-04-13 18:48:40,218 -- [test_update.py-->line:61] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 52, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 18:48:40,470 -- [test_update.py-->line:65] - INFO: 该用例昵称大于10位通过
2020-04-13 18:48:40,840 -- [test_update.py-->line:60] - ERROR: 该用例更改成功报错
2020-04-13 18:48:40,840 -- [test_update.py-->line:61] - ERROR: '中国' != {'reg_name': '中国'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 58, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '中国' != {'reg_name': '中国'}
2020-04-13 18:54:42,691 -- [test_update.py-->line:63] - ERROR: 该用例更改成功报错
2020-04-13 18:54:42,691 -- [test_update.py-->line:64] - ERROR: 'sda' != {'reg_name': 'sda'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 61, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'sda' != {'reg_name': 'sda'}
2020-04-13 18:54:43,071 -- [test_update.py-->line:63] - ERROR: 该用例更改成功报错
2020-04-13 18:54:43,071 -- [test_update.py-->line:64] - ERROR: '123' != {'reg_name': '123'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 61, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '123' != {'reg_name': '123'}
2020-04-13 18:54:43,435 -- [test_update.py-->line:63] - ERROR: 该用例更改成功报错
2020-04-13 18:54:43,435 -- [test_update.py-->line:64] - ERROR: '@as' != {'reg_name': '@as'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 61, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '@as' != {'reg_name': '@as'}
2020-04-13 18:54:43,698 -- [test_update.py-->line:63] - ERROR: 该用例昵称10位报错
2020-04-13 18:54:43,698 -- [test_update.py-->line:64] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 54, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 18:54:43,950 -- [test_update.py-->line:68] - INFO: 该用例昵称大于10位通过
2020-04-13 18:54:44,296 -- [test_update.py-->line:63] - ERROR: 该用例更改成功报错
2020-04-13 18:54:44,296 -- [test_update.py-->line:64] - ERROR: '中国' != {'reg_name': '中国'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 61, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '中国' != {'reg_name': '中国'}
2020-04-13 18:59:16,675 -- [test_update.py-->line:68] - INFO: 该用例更改成功通过
2020-04-13 18:59:17,037 -- [test_update.py-->line:68] - INFO: 该用例更改成功通过
2020-04-13 18:59:17,386 -- [test_update.py-->line:68] - INFO: 该用例更改成功通过
2020-04-13 18:59:17,652 -- [test_update.py-->line:63] - ERROR: 该用例昵称10位报错
2020-04-13 18:59:17,652 -- [test_update.py-->line:64] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 54, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 18:59:17,905 -- [test_update.py-->line:68] - INFO: 该用例昵称大于10位通过
2020-04-13 18:59:18,293 -- [test_update.py-->line:68] - INFO: 该用例更改成功通过
2020-04-13 18:59:44,269 -- [test_update.py-->line:63] - ERROR: 该用例更改成功报错
2020-04-13 18:59:44,269 -- [test_update.py-->line:64] - ERROR: 'sda' != {'reg_name': 'sda'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 61, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 'sda' != {'reg_name': 'sda'}
2020-04-13 18:59:44,619 -- [test_update.py-->line:63] - ERROR: 该用例更改成功报错
2020-04-13 18:59:44,619 -- [test_update.py-->line:64] - ERROR: '123' != {'reg_name': '123'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 61, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '123' != {'reg_name': '123'}
2020-04-13 18:59:44,954 -- [test_update.py-->line:63] - ERROR: 该用例更改成功报错
2020-04-13 18:59:44,954 -- [test_update.py-->line:64] - ERROR: '@as' != {'reg_name': '@as'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 61, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '@as' != {'reg_name': '@as'}
2020-04-13 18:59:45,210 -- [test_update.py-->line:63] - ERROR: 该用例昵称10位报错
2020-04-13 18:59:45,210 -- [test_update.py-->line:64] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 54, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 18:59:45,460 -- [test_update.py-->line:68] - INFO: 该用例昵称大于10位通过
2020-04-13 18:59:45,793 -- [test_update.py-->line:63] - ERROR: 该用例更改成功报错
2020-04-13 18:59:45,793 -- [test_update.py-->line:64] - ERROR: '中国' != {'reg_name': '中国'}
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 61, in test_update
    self.assertEqual(data['reg_name'],s)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '中国' != {'reg_name': '中国'}
2020-04-13 19:00:25,503 -- [test_update.py-->line:67] - INFO: 该用例更改成功通过
2020-04-13 19:00:25,890 -- [test_update.py-->line:67] - INFO: 该用例更改成功通过
2020-04-13 19:00:26,302 -- [test_update.py-->line:67] - INFO: 该用例更改成功通过
2020-04-13 19:00:26,642 -- [test_update.py-->line:62] - ERROR: 该用例昵称10位报错
2020-04-13 19:00:26,642 -- [test_update.py-->line:63] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 54, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 19:00:26,941 -- [test_update.py-->line:67] - INFO: 该用例昵称大于10位通过
2020-04-13 19:00:27,308 -- [test_update.py-->line:67] - INFO: 该用例更改成功通过
2020-04-13 19:00:47,251 -- [test_update.py-->line:66] - INFO: 该用例更改成功通过
2020-04-13 19:00:47,583 -- [test_update.py-->line:66] - INFO: 该用例更改成功通过
2020-04-13 19:00:47,920 -- [test_update.py-->line:66] - INFO: 该用例更改成功通过
2020-04-13 19:00:48,185 -- [test_update.py-->line:61] - ERROR: 该用例昵称10位报错
2020-04-13 19:00:48,185 -- [test_update.py-->line:62] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 53, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 19:00:48,436 -- [test_update.py-->line:66] - INFO: 该用例昵称大于10位通过
2020-04-13 19:00:48,779 -- [test_update.py-->line:66] - INFO: 该用例更改成功通过
2020-04-13 19:03:54,300 -- [test_update.py-->line:70] - INFO: 该用例更改成功通过
2020-04-13 19:03:54,644 -- [test_update.py-->line:70] - INFO: 该用例更改成功通过
2020-04-13 19:03:54,985 -- [test_update.py-->line:70] - INFO: 该用例更改成功通过
2020-04-13 19:03:55,283 -- [test_update.py-->line:65] - ERROR: 该用例昵称10位报错
2020-04-13 19:03:55,283 -- [test_update.py-->line:66] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 54, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 19:03:55,540 -- [test_update.py-->line:70] - INFO: 该用例昵称大于10位通过
2020-04-13 19:03:55,904 -- [test_update.py-->line:70] - INFO: 该用例更改成功通过
2020-04-13 19:05:43,538 -- [test_update.py-->line:69] - INFO: 该用例更改成功通过
2020-04-13 19:05:43,871 -- [test_update.py-->line:69] - INFO: 该用例更改成功通过
2020-04-13 19:05:44,211 -- [test_update.py-->line:69] - INFO: 该用例更改成功通过
2020-04-13 19:05:44,476 -- [test_update.py-->line:64] - ERROR: 该用例昵称10位报错
2020-04-13 19:05:44,476 -- [test_update.py-->line:65] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_update.py", line 53, in test_update
    self.assertEqual(expected['code'],res['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 19:05:44,727 -- [test_update.py-->line:69] - INFO: 该用例昵称大于10位通过
2020-04-13 19:05:45,071 -- [test_update.py-->line:69] - INFO: 该用例更改成功通过
2020-04-13 20:19:54,275 -- [test_add.py-->line:72] - INFO: 该用例通过通过
2020-04-13 20:22:08,259 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:08,591 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:08,885 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:09,192 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:09,514 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:09,814 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:10,145 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:10,465 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:10,741 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:11,076 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:22:11,366 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:13,786 -- [test_add.py-->line:68] - ERROR: 该用例加标成功错误
2020-04-13 20:24:13,786 -- [test_add.py-->line:69] - ERROR: 2 != 1
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_add.py", line 65, in test_add
    self.assertEqual(2,q-f)
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
2020-04-13 20:24:14,105 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:14,543 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:14,820 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:15,076 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:15,348 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:15,600 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:15,860 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:16,106 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:16,360 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:24:16,621 -- [test_add.py-->line:73] - INFO: 该用例通过通过
2020-04-13 20:26:59,087 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:26:59,356 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:26:59,602 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:26:59,907 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:27:00,179 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:27:00,432 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:27:00,696 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:27:00,975 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:27:01,252 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:27:01,507 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 20:27:01,756 -- [test_add.py-->line:75] - INFO: 该用例通过通过
2020-04-13 22:52:53,823 -- [test_audit.py-->line:93] - ERROR: 这条用例审核通过没有通过
2020-04-13 22:52:53,860 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 22:52:54,254 -- [test_audit.py-->line:93] - ERROR: 这条用例审核不通过没有通过
2020-04-13 22:52:54,254 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 22:52:54,709 -- [test_audit.py-->line:98] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-13 22:52:55,127 -- [test_audit.py-->line:98] - INFO: 这条用例项目id为空执行通过
2020-04-13 22:52:55,458 -- [test_audit.py-->line:93] - ERROR: 这条用例项目id不存在没有通过
2020-04-13 22:52:55,458 -- [test_audit.py-->line:94] - ERROR: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 86, in test_audit
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态

2020-04-13 22:55:17,163 -- [test_audit.py-->line:93] - ERROR: 这条用例审核通过没有通过
2020-04-13 22:55:17,164 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 22:55:17,525 -- [test_audit.py-->line:93] - ERROR: 这条用例审核不通过没有通过
2020-04-13 22:55:17,525 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 22:55:17,973 -- [test_audit.py-->line:98] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-13 22:55:18,385 -- [test_audit.py-->line:98] - INFO: 这条用例项目id为空执行通过
2020-04-13 22:55:18,744 -- [test_audit.py-->line:93] - ERROR: 这条用例项目id不存在没有通过
2020-04-13 22:55:18,744 -- [test_audit.py-->line:94] - ERROR: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 86, in test_audit
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态

2020-04-13 22:59:35,643 -- [test_audit.py-->line:93] - ERROR: 这条用例审核通过没有通过
2020-04-13 22:59:35,644 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 22:59:36,007 -- [test_audit.py-->line:93] - ERROR: 这条用例审核不通过没有通过
2020-04-13 22:59:36,008 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 22:59:36,393 -- [test_audit.py-->line:98] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-13 22:59:36,646 -- [test_audit.py-->line:98] - INFO: 这条用例项目id为空执行通过
2020-04-13 22:59:36,956 -- [test_audit.py-->line:93] - ERROR: 这条用例项目id不存在没有通过
2020-04-13 22:59:36,957 -- [test_audit.py-->line:94] - ERROR: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 86, in test_audit
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态

2020-04-13 22:59:44,834 -- [test_audit.py-->line:93] - ERROR: 这条用例审核通过没有通过
2020-04-13 22:59:44,834 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 22:59:45,166 -- [test_audit.py-->line:93] - ERROR: 这条用例审核不通过没有通过
2020-04-13 22:59:45,167 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 22:59:45,658 -- [test_audit.py-->line:98] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-13 22:59:46,047 -- [test_audit.py-->line:98] - INFO: 这条用例项目id为空执行通过
2020-04-13 22:59:46,389 -- [test_audit.py-->line:93] - ERROR: 这条用例项目id不存在没有通过
2020-04-13 22:59:46,390 -- [test_audit.py-->line:94] - ERROR: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 86, in test_audit
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态

2020-04-13 23:02:09,483 -- [test_audit.py-->line:95] - ERROR: 这条用例审核通过没有通过
2020-04-13 23:02:09,483 -- [test_audit.py-->line:96] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 87, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 23:02:09,840 -- [test_audit.py-->line:95] - ERROR: 这条用例审核不通过没有通过
2020-04-13 23:02:09,840 -- [test_audit.py-->line:96] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 87, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 23:02:10,313 -- [test_audit.py-->line:100] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-13 23:02:10,710 -- [test_audit.py-->line:100] - INFO: 这条用例项目id为空执行通过
2020-04-13 23:02:11,066 -- [test_audit.py-->line:95] - ERROR: 这条用例项目id不存在没有通过
2020-04-13 23:02:11,066 -- [test_audit.py-->line:96] - ERROR: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 88, in test_audit
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态

2020-04-13 23:02:23,503 -- [test_audit.py-->line:93] - ERROR: 这条用例审核通过没有通过
2020-04-13 23:02:23,503 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 23:02:23,879 -- [test_audit.py-->line:93] - ERROR: 这条用例审核不通过没有通过
2020-04-13 23:02:23,879 -- [test_audit.py-->line:94] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 85, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 23:02:24,370 -- [test_audit.py-->line:98] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-13 23:02:24,819 -- [test_audit.py-->line:98] - INFO: 这条用例项目id为空执行通过
2020-04-13 23:02:25,245 -- [test_audit.py-->line:93] - ERROR: 这条用例项目id不存在没有通过
2020-04-13 23:02:25,245 -- [test_audit.py-->line:94] - ERROR: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 86, in test_audit
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态

2020-04-13 23:20:31,438 -- [test_audit.py-->line:94] - ERROR: 这条用例审核通过没有通过
2020-04-13 23:20:31,492 -- [test_audit.py-->line:95] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 86, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 23:20:32,063 -- [test_audit.py-->line:94] - ERROR: 这条用例审核不通过没有通过
2020-04-13 23:20:32,063 -- [test_audit.py-->line:95] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 86, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 23:20:32,520 -- [test_audit.py-->line:99] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-13 23:20:32,925 -- [test_audit.py-->line:99] - INFO: 这条用例项目id为空执行通过
2020-04-13 23:20:34,465 -- [test_audit.py-->line:94] - ERROR: 这条用例项目id不存在没有通过
2020-04-13 23:20:34,465 -- [test_audit.py-->line:95] - ERROR: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 87, in test_audit
    self.assertEqual(expected['msg'],res1['msg'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 1194, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "D:\python\lib\unittest\case.py", line 666, in fail
    raise self.failureException(msg)
AssertionError: '项目不存在' != '项目不在审核中状态'
- 项目不存在
+ 项目不在审核中状态

2020-04-13 23:25:29,792 -- [test_audit.py-->line:94] - ERROR: 这条用例审核通过没有通过
2020-04-13 23:25:29,792 -- [test_audit.py-->line:95] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 86, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-13 23:41:35,629 -- [test_audit.py-->line:111] - INFO: 用例--审核通过--通过
2020-04-13 23:41:49,875 -- [test_audit.py-->line:111] - INFO: 用例--审核通过--通过
2020-04-14 00:13:15,780 -- [test_audit.py-->line:95] - ERROR: 这条用例审核通过没有通过
2020-04-14 00:13:15,780 -- [test_audit.py-->line:96] - ERROR: 0 != 2
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_audit.py", line 87, in test_audit
    self.assertEqual(expected['code'],res1['code'])
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-04-14 00:15:17,370 -- [test_audit.py-->line:100] - INFO: 这条用例审核通过执行通过
2020-04-14 00:16:00,056 -- [test_audit.py-->line:100] - INFO: 这条用例审核通过执行通过
2020-04-14 00:16:00,520 -- [test_audit.py-->line:100] - INFO: 这条用例审核不通过执行通过
2020-04-14 00:16:00,907 -- [test_audit.py-->line:100] - INFO: 这条用例项目不待审核状态执行通过
2020-04-14 00:16:01,319 -- [test_audit.py-->line:100] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-14 00:16:01,680 -- [test_audit.py-->line:100] - INFO: 这条用例项目id为空执行通过
2020-04-14 00:16:02,057 -- [test_audit.py-->line:100] - INFO: 这条用例项目id不存在执行通过
2020-04-14 00:17:34,504 -- [test_audit.py-->line:102] - INFO: 这条用例审核通过执行通过
2020-04-14 00:17:35,216 -- [test_audit.py-->line:102] - INFO: 这条用例审核不通过执行通过
2020-04-14 00:17:35,585 -- [test_audit.py-->line:102] - INFO: 这条用例项目不待审核状态执行通过
2020-04-14 00:17:35,993 -- [test_audit.py-->line:102] - INFO: 这条用例参数approved_or_not为空执行通过
2020-04-14 00:17:37,495 -- [test_audit.py-->line:102] - INFO: 这条用例项目id为空执行通过
2020-04-14 00:17:37,883 -- [test_audit.py-->line:102] - INFO: 这条用例项目id不存在执行通过
2020-04-14 12:22:49,471 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:不填参数--通过
2020-04-14 12:22:49,637 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:只填页面参数--通过
2020-04-14 12:22:49,738 -- [test_loans.py-->line:39] - ERROR: 用例--获取成功:只填页面内容数--未通过
2020-04-14 12:22:49,738 -- [test_loans.py-->line:40] - DEBUG: 预期结果{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-14 12:22:49,739 -- [test_loans.py-->line:41] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-14 12:22:49,739 -- [test_loans.py-->line:42] - ERROR: 20 != 10
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 37, in test_loans
    self.assertEqual(expected['len'],len(res['data']))
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10
2020-04-14 12:22:49,831 -- [test_loans.py-->line:39] - ERROR: 用例--获取成功:都填参数--未通过
2020-04-14 12:22:49,832 -- [test_loans.py-->line:40] - DEBUG: 预期结果{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-14 12:22:49,832 -- [test_loans.py-->line:41] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-14 12:22:49,832 -- [test_loans.py-->line:42] - ERROR: 20 != 10
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 37, in test_loans
    self.assertEqual(expected['len'],len(res['data']))
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10
2020-04-14 12:24:13,242 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:不填参数--通过
2020-04-14 12:24:13,335 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:只填页面参数--通过
2020-04-14 12:24:13,429 -- [test_loans.py-->line:39] - ERROR: 用例--获取成功:只填页面内容数--未通过
2020-04-14 12:24:13,430 -- [test_loans.py-->line:40] - DEBUG: 预期结果{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-14 12:24:13,430 -- [test_loans.py-->line:41] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-14 12:24:13,430 -- [test_loans.py-->line:42] - ERROR: 20 != 10
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 37, in test_loans
    self.assertEqual(expected['len'],len(res['data']))
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10
2020-04-14 12:24:13,519 -- [test_loans.py-->line:39] - ERROR: 用例--获取成功:都填参数--未通过
2020-04-14 12:24:13,519 -- [test_loans.py-->line:40] - DEBUG: 预期结果{'code': 0, 'msg': 'OK', 'len': 20}
2020-04-14 12:24:13,520 -- [test_loans.py-->line:41] - DEBUG: 实际结果{'code': 0, 'msg': 'OK', 'data': [{'id': 1, 'member_id': 2, 'title': '接口', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 12:30:47.0', 'bidding_start_time': '2020-02-29 12:31:03.0', 'full_time': '2020-03-03 10:01:18.0', 'status': 2}, {'id': 2, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:36:26.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 3, 'member_id': 2, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:43:28.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 4, 'member_id': 1, 'title': '接口测试', 'amount': 100000.0, 'loan_rate': 12.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 12:44:19.0', 'bidding_start_time': '2020-03-02 17:29:13.0', 'full_time': '2020-03-03 23:01:50.0', 'status': 3}, {'id': 5, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:06.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 6, 'member_id': 146, 'title': '接口测试', 'amount': 100.0, 'loan_rate': 18.0, 'loan_term': 4, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:24:57.0', 'bidding_start_time': '2020-02-29 13:24:59.0', 'full_time': '2020-02-29 13:25:02.0', 'status': 3}, {'id': 7, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': '2020-03-02 17:40:55.0', 'full_time': '2020-03-03 23:03:24.0', 'status': 3}, {'id': 8, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6500.0, 'loan_rate': 24.0, 'loan_term': 6, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:32.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 9, 'member_id': 129, 'title': 'simple资金周转', 'amount': 6600.0, 'loan_rate': 12.6, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:33.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}, {'id': 10, 'member_id': 129, 'title': 'simpl', 'amount': 1000000.0, 'loan_rate': 23.9, 'loan_term': 30, 'loan_date_type': 2, 'bidding_days': 5, 'create_time': '2020-02-29 13:25:34.0', 'bidding_start_time': None, 'full_time': None, 'status': 5}], 'copyright': 'Copyright 柠檬班 © 2017-2019 湖南省零檬信息技术有限公司 All Rights Reserved'}：
2020-04-14 12:24:13,520 -- [test_loans.py-->line:42] - ERROR: 20 != 10
Traceback (most recent call last):
  File "E:\pycharm_new\api_test\testcase\test_loans.py", line 37, in test_loans
    self.assertEqual(expected['len'],len(res['data']))
  File "D:\python\lib\unittest\case.py", line 821, in assertEqual
    assertion_func(first, second, msg=msg)
  File "D:\python\lib\unittest\case.py", line 814, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 20 != 10
2020-04-14 12:28:11,138 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:不填参数--通过
2020-04-14 12:28:11,235 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:只填页面参数--通过
2020-04-14 12:28:11,374 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:只填页面内容数--通过
2020-04-14 12:28:11,463 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:都填参数--通过
2020-04-14 12:34:24,607 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:不填参数--通过
2020-04-14 12:34:24,918 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:只填页面参数--通过
2020-04-14 12:34:25,192 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:只填页面内容数--通过
2020-04-14 12:34:25,459 -- [test_loans.py-->line:47] - INFO: 用例--获取成功:都填参数--通过
2020-04-14 14:04:36,366 -- [test_info.py-->line:64] - INFO: 用例--正常获取用户信息--通过
2020-04-14 14:04:36,708 -- [test_info.py-->line:64] - INFO: 用例--不存在的用户id--通过
2020-04-14 14:04:45,394 -- [test_info.py-->line:64] - INFO: 用例--正常获取用户信息--通过
2020-04-14 14:04:45,766 -- [test_info.py-->line:64] - INFO: 用例--不存在的用户id--通过
2020-04-14 19:12:38,979 -- [test_invest.py-->line:62] - INFO: 用例借款人正常登录通过
2020-04-14 19:12:39,297 -- [test_invest.py-->line:62] - INFO: 用例管理员正常登录通过
2020-04-14 19:12:39,578 -- [test_invest.py-->line:62] - INFO: 用例投资人正常登录通过
2020-04-14 19:14:44,166 -- [test_invest.py-->line:62] - INFO: 用例借款人正常登录通过
2020-04-14 19:14:44,469 -- [test_invest.py-->line:62] - INFO: 用例管理员正常登录通过
2020-04-14 19:14:44,764 -- [test_invest.py-->line:62] - INFO: 用例投资人正常登录通过
2020-04-14 19:28:34,174 -- [test_invest.py-->line:63] - INFO: 用例借款人正常登录通过
2020-04-14 19:28:34,518 -- [test_invest.py-->line:63] - INFO: 用例借款人加标通过
2020-04-14 19:28:34,947 -- [test_invest.py-->line:63] - INFO: 用例管理员正常登录通过
2020-04-14 19:28:35,242 -- [test_invest.py-->line:63] - INFO: 用例管理员审核通过
2020-04-14 19:28:35,674 -- [test_invest.py-->line:63] - INFO: 用例投资人正常登录通过
2020-04-14 19:28:35,976 -- [test_invest.py-->line:63] - INFO: 用例充值成功-整数通过
2020-04-14 19:28:36,263 -- [test_invest.py-->line:63] - INFO: 用例投资人正常投资通过
2020-04-14 19:28:36,531 -- [test_invest.py-->line:63] - INFO: 用例投资人id为空通过
2020-04-14 19:28:36,782 -- [test_invest.py-->line:63] - INFO: 用例标id为空通过
2020-04-14 19:28:37,046 -- [test_invest.py-->line:63] - INFO: 用例投资金额为空通过
